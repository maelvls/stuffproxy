map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

server {
    listen 80;

    location = / {
        return 301 https://$host/speedtest/;
    }

    location /speedtest/ {
        # See [what-is-break]
        rewrite    ^/speedtest(.*) $1 break;
        proxy_pass http://speedtest;
    }

    location = /firefox {
        return 301 https://$host/firefox/;
    }

    location /firefox/ {
        proxy_pass http://firefox:5800/;
        location /firefox/websockify {            
	    proxy_pass http://firefox:5800/websockify/;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection $connection_upgrade;
	    proxy_read_timeout 86400;
        }
    }

    location = /transmission {
        return 301 https://$host/transmission/;
    }
    location /transmission/ {
        # See [what-is-break]
        rewrite    ^/transmission(.*) /transmission$1 break;
	
	# By default, Nginx does not proxy headers returned by the
	# upstream server. To enable specific headers returned
	# by the server, I have to use proxy_pass_header.
	# See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header
        proxy_pass_header X-Transmission-Session-Id;
	
        proxy_pass http://transmission:9091;
    }
}

# [taxing-rewrites]: https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#taxing-rewrites
# [what-is-break]: https://serverfault.com/questions/131474/nginx-url-rewriting-difference-between-break-and-last
